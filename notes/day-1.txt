https://github.com/joydip-git/siemens-angular-16thdec2024

JavaScript
TypeScript
Node JS

Angular

Node JS
Vs Code

HTML
---------------
self-closing tag or empty tag: no nested element inside that tag
<tag-name > or <tag-name />
ex: meta => <meta>, <br>

web servers:
-------------------
production servers:

Internet Information service (IIS - windows os)
Tomcat (Apapche)
NGINX
Vercel

dev:
application development web server (app server)


Cascading Style Sheet (CSS):
----------------------------------
background-color:blue


in-line:
------------------
<element-name style="background-color: bisque;font-family:'Courier New'; text-align: center;>


out-line:
-------------------
i. element selector:
tag-name1, tag-name2,... { prop1:value;prop2:value }

ii. id selector:
#id1, #id2, ...{ prop1:value;prop2:value }

iii. class selector:

.cls-name { prop1:value;prop2:value }

apply:
<element-name class="cls-name">

a. style tag
b. separate css file [out-file]


HTML document object model (HTML DOM) => created by browser

HTML parser, JS engine, CSS engine

JS engine:
------------------------
1. chrome => V8
2. firefox => Spidermonkey
3. safari => JSCore (indigo)
4. edge => chakra => V8 (chromekit)
5. opera => chromekit browser


2009 => Ryan Dahl => Node JS
V8 engine => written using C++ and an open soure
any C++ application can use this as library

Node JS => JS runtime using C++, built at the top of V8 engine. it has a rich library.
server-side framework => web app, web api (restful) server, 


TypeScript:
-------------------------
1. a development level/mode language
b. provides - strict typification and static type checking
c. offers additional features - like, interface, generics, extra data types, such as - any, optional, partial, unknown etc.
d. can't be run directly in browser or node js
e. needs transpilation (conversion to JS)

transpiler for TypeScript => TypeScript Compiler (tsc)

tool used to install: npm (Node Package Manager)

package installation:
	a. local:
		>npm i <package-name> [complete dependency]
		>npm i <package-name> -D [dev dependency]

	older:
		>npm i <package-name> --save [complete dependency]
		>npm i <package-name> --save-dev [dev dependency]

	b. global: 
		>npm i <package-name> --location=global
	path: C:\Users\<user-name>\AppData\Roaming\npm

package.json file => configuration and dependencies
create using following command:
>npm init --yes

 











